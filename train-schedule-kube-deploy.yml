- hosts: "{{ env }}"
  become: yes
  tasks: 
    - name: Deploying Application pods...
      shell: | 
         if [ `kubectl get deployment | grep -v NAME | awk '{print $1}' | grep training_schedule | wc -l` -gt 0 ]; then  
            echo "deleteing previous application deployment"
            kubectl delete deployment `kubectl get deployment | grep -v NAME | awk '{print $1}' | grep training_schedule`
            echo "creating new application deployment"
            kubectl create deployment training_schedule --image=elchen8923/training-schedule:{{ build }}
         else 
            echo "Deploying Sampleapp Application"
            kubectl create deployment training-schedule --image=elchen8923/training-schedule:{{ build }}
         fi
    - name: deploying service
      shell: |
         if [ `kubectl get svc | grep training-schedule  | awk '{print $1}' | wc -l` -gt 0 ]; then
            echo "app service found, No actions taken"
            #kubectl delete svc `kubectl get svc | grep training-schedule | awk '{print $1}'`
         else
            echo "Creating App Services"
            kubectl expose deployment training-schedule --name training-schedule --type NodePort --port 8080 --target-port 9080
         fi
    - name: increase replicas 
      shell: kubectl scale deploy training-schedule --replicas=2
      
    #- name: deploy app
    #  shell: kubectl create deployment training-schedule --image=elchen8923/training-schedule:{{ build }}
    #- name: deploy service
    #  shell: kubectl expose deployment sampleapp --name sampleapp --type NodePort --port 8080 --target-port 9080